"use client";
import Link from "next/link";
import { useMemo, useState } from "react";

type Item = { id:string; title:string; type:"Government"|"Academic"|"Project"|"People"; year:number; region:string };

const seed: Item[] = [
  { id:"g-001", title:"Land Board Minutes – Ghanzi (2016)", type:"Government", year:2016, region:"Ghanzi" },
  { id:"a-002", title:"Elephant Movement in Northern Kalahari", type:"Academic", year:2021, region:"North" },
  { id:"p-003", title:"Water Points Rehabilitation Pilot", type:"Project", year:2024, region:"South" },
  { id:"p-004", title:"Okavango Community Mapping", type:"Project", year:2023, region:"Okavango" },
  { id:"a-005", title:"Vegetation Dynamics – Dr Mubyana", type:"Academic", year:2020, region:"North" },
  { id:"r-006", title:"Researcher: Dr Mubyana", type:"People", year:2020, region:"North" },
];

const TYPES = ["Government","Academic","Project","People"] as const;
const REGIONS = ["North","South","Ghanzi","Okavango"] as const;

export default function BrowsePage(){
  const [q,setQ]=useState("");                 // search
  const [types,setTypes]=useState<string[]>([]); // multi-select types
  const [region,setRegion]=useState<string>(""); // single region

  const results = useMemo(()=>{
    return seed.filter(it=>{
      const matchesText = q.trim().length===0 || it.title.toLowerCase().includes(q.toLowerCase());
      const matchesType = types.length===0 || types.includes(it.type);
      const matchesRegion = !region || it.region===region;
      return matchesText && matchesType && matchesRegion;
    });
  },[q,types,region]);

  const toggleType = (t:string)=> setTypes(prev=> prev.includes(t)? prev.filter(x=>x!==t) : [...prev,t]);

  return (
    <section className="section">
      <div className="container" style={{display:"grid",gridTemplateColumns:"280px 1fr",gap:"22px"}}>
        {/* Sidebar filters */}
        <aside className="card" style={{padding:"16px"}}>
          <h2 className="text-lg" style={{fontWeight:700,letterSpacing:".015em"}}>Narrow down</h2>

          <div className="mt-4">
            <label className="text-sm muted">Search</label>
            <input className="input mt-1" placeholder="Find by title…" value={q} onChange={e=>setQ(e.target.value)} />
          </div>

          <div className="mt-5">
            <div className="text-sm muted">Type</div>
            <div style={{display:"flex",flexWrap:"wrap",gap:"8px",marginTop:"8px"}}>
              {TYPES.map(t=>(
                <button key={t} onClick={()=>toggleType(t)} className="chip" style={{borderColor: types.includes(t) ? "var(--accent)" : "var(--border)", color: types.includes(t) ? "var(--text)" : "var(--muted)"}}>
                  {t}
                </button>
              ))}
            </div>
          </div>

          <div className="mt-5">
            <div className="text-sm muted">Region</div>
            <div style={{display:"flex",flexWrap:"wrap",gap:"8px",marginTop:"8px"}}>
              {REGIONS.map(r=>(
                <button key={r} onClick={()=>setRegion(region===r?"":r)} className="chip" style={{borderColor: region===r ? "var(--accent)" : "var(--border)", color: region===r ? "var(--text)" : "var(--muted)"}}>
                  {r}
                </button>
              ))}
            </div>
          </div>

          <div className="mt-5" style={{display:"flex",gap:"10px"}}>
            <button className="btn" onClick={()=>{ setQ(""); setTypes([]); setRegion(""); }}>Reset</button>
            <Link href="/map" className="btn ghost">Use Map →</Link>
          </div>
        </aside>

        {/* Results list */}
        <main>
          <div className="text-sm muted" style={{marginBottom:"10px"}}>{results.length} result{results.length===1?"":"s"}</div>
          <div className="list">
            {results.map(it=>(
              <article key={it.id} className="list-item">
                <div>
                  <div style={{fontWeight:600,letterSpacing:".0125em"}}>{it.title}</div>
                  <div className="muted text-xs" style={{marginTop:"4px"}}>{it.type} · {it.region} · {it.year}</div>
                </div>
                <div style={{display:"flex",gap:"10px"}}>
                  {it.type==="Government"||it.type==="Academic" ? (
                    <Link href="/papers" className="btn ghost">Open</Link>
                  ) : it.type==="Project" ? (
                    <Link href="/projects" className="btn ghost">Open</Link>
                  ) : (
                    <Link href="/people" className="btn ghost">Open</Link>
                  )}
                </div>
              </article>
            ))}
          </div>
        </main>
      </div>
    </section>
  );
}